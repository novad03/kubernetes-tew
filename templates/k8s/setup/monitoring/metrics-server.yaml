apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: monitoring
  name: metrics-server
  labels:
    app: metrics-server
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:metrics-server
  labels:
    app: metrics-server
rules:
  - apiGroups:
    - ""
    resources:
      - pods
      - nodes
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
    - ""
    resources:
    - nodes/stats
    verbs:
    - get
    - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: metrics-server:system:auth-delegator
  namespace: kube-system
  labels:
    app: metrics-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    namespace: monitoring
    name: metrics-server
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:metrics-server
  labels:
    app: metrics-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:metrics-server
subjects:
  - kind: ServiceAccount
    name: metrics-server
    namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: metrics-server-auth-reader
  namespace: kube-system
  labels:
    app: metrics-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: metrics-server
    namespace: monitoring
---
apiVersion: v1
kind: Service
metadata:
  namespace: monitoring
  name: metrics-server
  labels:
    app: metrics-server
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 443
  selector:
    app: metrics-server
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  namespace: monitoring
  name: metrics-server
  labels:
    app: metrics-server
spec:
  selector:
    matchLabels:
      app: metrics-server
  template:
    metadata:
      labels:
        app: metrics-server
    spec:
      serviceAccountName: metrics-server
      containers:
        - name: metrics-server
          image: "{{.MetricsServerImage}}"
          imagePullPolicy: IfNotPresent
          command:
            - /metrics-server
            - "--source=kubernetes.summary_api:''"
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  namespace: monitoring
  name: v1beta1.metrics.k8s.io
  labels:
    app: metrics-server
spec:
  service:
    namespace: monitoring
    name: metrics-server
  group: metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100
