apiVersion: v1
kind: Secret
metadata:
  namespace: kube-system
  name: kubernetes-dashboard
  labels:
    app: kubernetes-dashboard
type: Opaque
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: kube-system
  name: kubernetes-dashboard
  labels:
    app: kubernetes-dashboard
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  namespace: kube-system
  name: kubernetes-dashboard
  labels:
    app: kubernetes-dashboard
rules:
- apiGroups:
    - ""
  resources:
    - secrets
  verbs:
    - create
- apiGroups:
    - ""
  resources:
    - configmaps
  verbs:
    - create
- apiGroups:
    - ""
  resources:
    - secrets
  resourceNames:
    - kubernetes-dashboard-key-holder
    - kubernetes-dashboard
  verbs:
    - get
    - update
    - delete
- apiGroups:
    - ""
  resources:
    - configmaps
  resourceNames:
    - kubernetes-dashboard-settings
  verbs:
    - get
    - update
- apiGroups:
    - ""
  resources:
    - services
  resourceNames:
    - heapster
  verbs:
    - proxy
- apiGroups:
    - ""
  resources:
    - services/proxy
  resourceNames:
    - heapster
    - "http:heapster:"
    - "https:heapster:"
  verbs:
    - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  namespace: kube-system
  name: kubernetes-dashboard
  labels:
    app: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubernetes-dashboard
subjects:
  - kind: ServiceAccount
    namespace: kube-system
    name: kubernetes-dashboard
---
apiVersion: v1
kind: Service
metadata:
  namespace: kube-system
  name: kubernetes-dashboard
  labels:
    app: kubernetes-dashboard
spec:
  type: NodePort
  ports:
  - port: 443
    targetPort: https
    nodePort: {{.KubernetesDashboardPort}}
  selector:
    app: kubernetes-dashboard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: kube-system
  name: kubernetes-dashboard
  labels:
    app: kubernetes-dashboard
spec:
  selector:
    matchLabels:
      app: kubernetes-dashboard
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kubernetes-dashboard
    spec:
      serviceAccountName: kubernetes-dashboard
      containers:
      - name: kubernetes-dashboard
        image: "{{.KubernetesDashboardImage}}"
        args:
          - --auto-generate-certificates
        ports:
        - name: https
          containerPort: 8443
          protocol: TCP
        volumeMounts:
        - name: kubernetes-dashboard-certs
          mountPath: /certs
        - mountPath: /tmp
          name: tmp-volume
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /
            port: 8443
          initialDelaySeconds: 30
          timeoutSeconds: 30
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
      volumes:
      - name: kubernetes-dashboard-certs
        secret:
          secretName: kubernetes-dashboard
      - name: tmp-volume
        emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: kube-system
  name: kubernetes-dashboard-settings
data:
  _global: '{"clusterName":"{{.ClusterName}}","itemsPerPage":50,"autoRefreshTimeInterval":5}'
