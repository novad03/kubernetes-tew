apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: storage
  name: csi-attacher
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: storage
  name: csi-nodeplugin
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: storage
  name: csi-provisioner
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-attacher-runner
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csi-nodeplugin
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "update"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-provisioner-runner
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-attacher-role
subjects:
  - kind: ServiceAccount
    name: csi-attacher
    namespace: storage
roleRef:
  kind: ClusterRole
  name: external-attacher-runner
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-nodeplugin
subjects:
  - kind: ServiceAccount
    name: csi-nodeplugin
    namespace: storage
roleRef:
  kind: ClusterRole
  name: csi-nodeplugin
  apiGroup: rbac.authorization.k8s.io          
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
    name: csi-provisioner-role
subjects:
  - kind: ServiceAccount
    name: csi-provisioner
    namespace: storage
roleRef:
  kind: ClusterRole
  name: external-provisioner-runner
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
    namespace: storage
    name: csi-rbdplugin-attacher
spec:
  serviceName: "csi-rbdplugin-attacher"
  replicas: 1
  template:
    metadata:
      labels:
        app: csi-rbdplugin-attacher
    spec:
      serviceAccount: csi-attacher
      containers:
        - name: csi-rbdplugin-attacher
          image: {{.CSIAttacherImage}}
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: {{.CephRBDPluginDirectory}}/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: {{.CephRBDPluginDirectory}}
      volumes:
        - name: socket-dir
          hostPath:
            path: {{.CephRBDPluginDirectory}}
            type: DirectoryOrCreate
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
    namespace: storage
    name: csi-rbdplugin-provisioner
spec:
  serviceName: "csi-rbdplugin-provisioner"
  replicas: 1
  template:
    metadata:
      labels:
        app: csi-rbdplugin-provisioner
    spec:
      serviceAccount: csi-provisioner
      containers:
        - name: csi-provisioner
          image: {{.CSIProvisionerImage}}
          args:
            - "--provisioner=csi-rbdplugin"
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
          env:
            - name: ADDRESS
              value: {{.CephRBDPluginDirectory}}/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: {{.CephRBDPluginDirectory}}
      volumes:
        - name: socket-dir
          hostPath:
            path: {{.CephRBDPluginDirectory}}
            type: DirectoryOrCreate
---
apiVersion: apps/v1beta2
kind: DaemonSet
metadata:
    namespace: storage
    name: csi-rbdplugin
spec:
  selector:
    matchLabels:
      app: csi-rbdplugin
  template:
    metadata:
      labels:
        app: csi-rbdplugin
    spec:
      serviceAccount: csi-nodeplugin
      hostNetwork: true
      containers:
        - name: driver-registrar
          image: {{.CSIDriverRegistrarImage}}
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"              
          env:
            - name: ADDRESS
              value: {{.CephRBDPluginDirectory}}/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: {{.CephRBDPluginDirectory}}/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: {{.CephRBDPluginDirectory}}
            - name: registration-dir
              mountPath: /registration
        - name: csi-rbdplugin 
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: {{.CSICephRBDPluginImage}}
          args :
            - "--nodeid=$(NODE_ID)"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--v=5"
            - "--drivername=csi-rbdplugin"
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix:///var/lib/kubelet/plugins/csi-rbdplugin/csi.sock
          volumeMounts:
            - name: plugin-dir
              mountPath: /var/lib/kubelet/plugins/csi-rbdplugin
              # Hardcoded path in plugin 
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: "Bidirectional"
            - mountPath: /dev
              name: host-dev
            - mountPath: /sys
              name: host-sys
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
      volumes:
        - name: plugin-dir
          hostPath:
            path: {{.CephRBDPluginDirectory}}
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: {{.PluginsDirectory}}
            type: Directory
        - name: pods-mount-dir
          hostPath:
            path: {{.PodsDirectory}}
            type: Directory
        - name: socket-dir
          hostPath:
            path: {{.CephRBDPluginDirectory}}
            type: DirectoryOrCreate
        - name: host-dev
          hostPath:
            path: /dev
        - name: host-sys
          hostPath:
            path: /sys
        - name: lib-modules
          hostPath:
            path: /lib/modules
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
    namespace: storage
    name: csi-cephfsplugin-attacher
spec:
  serviceName: "csi-cephfsplugin-attacher"
  replicas: 1
  template:
    metadata:
      labels:
        app: csi-cephfsplugin-attacher
    spec:
      serviceAccount: csi-attacher
      containers:
        - name: csi-cephfsplugin-attacher
          image: {{.CSIAttacherImage}}
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: {{.CephFSPluginDirectory}}/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: {{.CephFSPluginDirectory}}
      volumes:
        - name: socket-dir
          hostPath:
            path: {{.CephFSPluginDirectory}}
            type: DirectoryOrCreate
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
    namespace: storage
    name: csi-cephfsplugin-provisioner
spec:
  serviceName: "csi-cephfsplugin-provisioner"
  replicas: 1
  template:
    metadata:
      labels:
        app: csi-cephfsplugin-provisioner
    spec:
      serviceAccount: csi-provisioner
      containers:
        - name: csi-provisioner
          image: {{.CSIProvisionerImage}}
          args:
            - "--provisioner=csi-cephfsplugin"
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
          env:
            - name: ADDRESS
              value: {{.CephFSPluginDirectory}}/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: {{.CephFSPluginDirectory}}
      volumes:
        - name: socket-dir
          hostPath:
            path: {{.CephFSPluginDirectory}}
            type: DirectoryOrCreate
---
apiVersion: apps/v1beta2
kind: DaemonSet
metadata:
    namespace: storage
    name: csi-cephfsplugin
spec:
  selector:
    matchLabels:
      app: csi-cephfsplugin
  template:
    metadata:
      labels:
        app: csi-cephfsplugin
    spec:
      serviceAccount: csi-nodeplugin
      hostNetwork: true
      containers:
        - name: driver-registrar
          image: {{.CSIDriverRegistrarImage}}
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"              
          env:
            - name: ADDRESS
              value: {{.CephFSPluginDirectory}}/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: {{.CephFSPluginDirectory}}/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: {{.CephFSPluginDirectory}}
            - name: registration-dir
              mountPath: /registration
        - name: csi-cephfsplugin
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: {{.CSICephFSPluginImage}}
          args :
            - "--nodeid=$(NODE_ID)"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--v=5"
            - "--drivername=csi-cephfsplugin"
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix:///var/lib/kubelet/plugins/csi-cephfsplugin/csi.sock
          volumeMounts:
            - name: plugin-dir
              mountPath: /var/lib/kubelet/plugins/csi-cephfsplugin
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: "Bidirectional"
            - mountPath: /sys
              name: host-sys
            - name: lib-modules
              mountPath: /lib/modules
              readOnly: true
            - name: host-dev
              mountPath: /dev
      volumes:
        - name: plugin-dir
          hostPath:
            path: {{.CephFSPluginDirectory}}
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: {{.PluginsDirectory}}
            type: Directory
        - name: pods-mount-dir
          hostPath:
            path: {{.PodsDirectory}}
            type: Directory
        - name: socket-dir
          hostPath:
            path: {{.CephFSPluginDirectory}}
            type: DirectoryOrCreate
        - name: host-sys
          hostPath:
            path: /sys
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: host-dev
          hostPath:
            path: /dev
---
apiVersion: v1
kind: Service
metadata:
  namespace: storage
  name: csi-cephfsplugin-provisioner
  labels:
    app: csi-cephfsplugin-provisioner
spec:
  selector:
    app: csi-cephfsplugin-provisioner
  ports:
    - name: dummy
      port: 12345
---
apiVersion: v1
kind: Service
metadata:
  namespace: storage
  name: csi-cephfsplugin-attacher
  labels:
    app: csi-cephfsplugin-attacher
spec:
  selector:
    app: csi-cephfsplugin-attacher
  ports:
    - name: dummy
      port: 12345
---
apiVersion: v1
kind: Service
metadata:
  namespace: storage
  name: csi-rbdplugin-provisioner
  labels:
    app: csi-rbdplugin-provisioner
spec:
  selector:
    app: csi-rbdplugin-provisioner
  ports:
    - name: dummy
      port: 12345
---
apiVersion: v1
kind: Service
metadata:
  namespace: storage
  name: csi-rbdplugin-attacher
  labels:
    app: csi-rbdplugin-attacher
spec:
  selector:
    app: csi-rbdplugin-attacher
  ports:
    - name: dummy
      port: 12345
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
    namespace: storage
    name: csi-rbd
    annotations:
      storageclass.kubernetes.io/is-default-class: "true"
provisioner: csi-rbdplugin 
reclaimPolicy: Delete
parameters:
    monitors: {{range $index, $node := .StorageControllers}}{{if $index}},{{end}}{{$node.IP}}:6789{{end}}
    pool: {{.CephRBDPoolName}}
    imageFormat: "2"
    imageFeatures: layering
    csiProvisionerSecretName: csi-rbd-secret
    csiProvisionerSecretNamespace: storage
    csiNodePublishSecretName: csi-rbd-secret
    csiNodePublishSecretNamespace: storage
    adminid: admin
    userid: k8s-tew
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
    namespace: storage
    name: csi-cephfs
provisioner: csi-cephfsplugin
reclaimPolicy: Delete
parameters:
  mounter: kernel
  monitors: {{range $index, $node := .StorageControllers}}{{if $index}},{{end}}{{$node.IP}}:6789{{end}}
  provisionVolume: "true"
  pool: {{.CephFSPoolName}}
  csiProvisionerSecretName: csi-cephfs-secret
  csiProvisionerSecretNamespace: storage
  csiNodeStageSecretName: csi-cephfs-secret
  csiNodeStageSecretNamespace: storage
