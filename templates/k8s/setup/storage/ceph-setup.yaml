{{range $index, $node := .StorageControllers}}---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: storage
  name: ceph-mgr-{{$node.Name}}
  labels:
    app: ceph
    daemon: mgr
    instance: ceph-mgr-{{$node.Name}}
spec:
  selector:
    matchLabels:
      app: ceph
      daemon: mgr
      instance: ceph-mgr-{{$node.Name}}
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ceph
        daemon: mgr
        instance: ceph-mgr-{{$node.Name}}
    spec:
      hostNetwork: true
      nodeSelector:
        kubernetes.io/hostname: {{$node.Name}}
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
      - name: ceph-config
        hostPath:
          path: {{$.CephConfigDirectory}}
          type: DirectoryOrCreate
      - name: ceph-data
        hostPath:
          path: {{$.CephDataDirectory}}
          type: DirectoryOrCreate
      - name: k8s-tew-binary
        hostPath:
          path: {{$.K8sTewBinary}}
          type: File
      - name: k8s-tew-config
        hostPath:
          path: {{$.K8sTewConfig}}
          type: File
      containers:
      - name: ceph-mgr
        image: {{$.CephImage}}
        securityContext:
          privileged: true
        command: ["/k8s-tew"]
        args: 
        - ceph
        - mgr
        - --id
        - {{$node.Name}}
        env:
        - name: K8S_TEW_BASE_DIRECTORY
          value: "/"
        volumeMounts:
        - name: ceph-config
          mountPath: /etc/ceph
        - name: ceph-data
          mountPath: /var/lib/ceph
        - name: k8s-tew-binary
          mountPath: /k8s-tew
        - name: k8s-tew-config
          mountPath: /etc/k8s-tew/config.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: storage
  name: ceph-mon-{{$node.Name}}
  labels:
    app: ceph
    daemon: mon
    instance: ceph-mon-{{$node.Name}}
spec:
  selector:
    matchLabels:
      app: ceph
      daemon: mon
      instance: ceph-mon-{{$node.Name}}
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ceph
        daemon: mon
        instance: ceph-mon-{{$node.Name}}
    spec:
      hostNetwork: true
      nodeSelector:
        kubernetes.io/hostname: {{$node.Name}}
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
      - name: ceph-config
        hostPath:
          path: {{$.CephConfigDirectory}}
          type: DirectoryOrCreate
      - name: ceph-data
        hostPath:
          path: {{$.CephDataDirectory}}
          type: DirectoryOrCreate
      - name: k8s-tew-binary
        hostPath:
          path: {{$.K8sTewBinary}}
          type: File
      - name: k8s-tew-config
        hostPath:
          path: {{$.K8sTewConfig}}
          type: File
      containers:
      - name: ceph-mon
        image: {{$.CephImage}}
        command: ["/k8s-tew"]
        args: 
        - ceph
        - mon
        - --id
        - {{$node.Name}}
        env:
        - name: K8S_TEW_BASE_DIRECTORY
          value: "/"
        volumeMounts:
        - name: ceph-config
          mountPath: /etc/ceph
        - name: ceph-data
          mountPath: /var/lib/ceph
        - name: k8s-tew-binary
          mountPath: /k8s-tew
        - name: k8s-tew-config
          mountPath: /etc/k8s-tew/config.yaml
{{end}}{{range $index, $node := .StorageNodes}}---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: storage
  name: ceph-mds-{{$node.Name}}
  labels:
    app: ceph
    daemon: mds
    instance: ceph-mds-{{$node.Name}}
spec:
  selector:
    matchLabels:
      app: ceph
      daemon: mds
      instance: ceph-mds-{{$node.Name}}
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ceph
        daemon: mds
        instance: ceph-mds-{{$node.Name}}
    spec:
      hostNetwork: true
      nodeSelector:
        kubernetes.io/hostname: {{$node.Name}}
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
      - name: ceph-config
        hostPath:
          path: {{$.CephConfigDirectory}}
          type: DirectoryOrCreate
      - name: ceph-data
        hostPath:
          path: {{$.CephDataDirectory}}
          type: DirectoryOrCreate
      - name: ceph-dev
        hostPath:
          path: /dev
          type: DirectoryOrCreate
      - name: k8s-tew-binary
        hostPath:
          path: {{$.K8sTewBinary}}
          type: File
      - name: k8s-tew-config
        hostPath:
          path: {{$.K8sTewConfig}}
          type: File
      containers:
      - name: ceph-mds
        image: {{$.CephImage}}
        command: ["/k8s-tew"]
        args: 
        - ceph
        - mds
        - --id
        - {{$node.Name}}
        ports:
        - containerPort: 6800
        env:
        - name: K8S_TEW_BASE_DIRECTORY
          value: "/"
        volumeMounts:
        - name: ceph-config
          mountPath: /etc/ceph
        - name: ceph-data
          mountPath: /var/lib/ceph
        - name: ceph-dev
          mountPath: /dev
        - name: k8s-tew-binary
          mountPath: /k8s-tew
        - name: k8s-tew-config
          mountPath: /etc/k8s-tew/config.yaml
        livenessProbe:
          tcpSocket:
            port: 6800
          initialDelaySeconds: 60
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: 6800
          timeoutSeconds: 5
{{end}}{{range $index, $node := .StorageNodes}}---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: storage
  name: ceph-rgw-{{$node.Name}}
  labels:
    app: ceph
    daemon: rgw
    instance: ceph-rgw-{{$node.Name}}
spec:
  selector:
    matchLabels:
      app: ceph
      daemon: rgw
      instance: ceph-rgw-{{$node.Name}}
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ceph
        daemon: rgw
        instance: ceph-rgw-{{$node.Name}}
    spec:
      nodeSelector:
        kubernetes.io/hostname: {{$node.Name}}
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
      - name: ceph-config
        hostPath:
          path: {{$.CephConfigDirectory}}
          type: DirectoryOrCreate
      - name: ceph-data
        hostPath:
          path: {{$.CephDataDirectory}}
          type: DirectoryOrCreate
      - name: k8s-tew-binary
        hostPath:
          path: {{$.K8sTewBinary}}
          type: File
      - name: k8s-tew-config
        hostPath:
          path: {{$.K8sTewConfig}}
          type: File
      containers:
      - name: ceph-rgw
        image: {{$.CephImage}}
        command: ["/k8s-tew"]
        args: 
        - ceph
        - rgw
        - --id
        - {{$node.Name}}
        ports:
        - containerPort: 7480
          name: rgw
        env:
        - name: K8S_TEW_BASE_DIRECTORY
          value: "/"
        volumeMounts:
        - name: ceph-config
          mountPath: /etc/ceph
        - name: ceph-data
          mountPath: /var/lib/ceph
        - name: k8s-tew-binary
          mountPath: /k8s-tew
        - name: k8s-tew-config
          mountPath: /etc/k8s-tew/config.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: storage
  name: ceph-osd-{{$node.Name}}
  labels:
    app: ceph
    daemon: osd
    instance: ceph-osd-{{$node.Name}}
spec:
  selector:
    matchLabels:
      app: ceph
      daemon: osd
      instance: ceph-osd-{{$node.Name}}
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ceph
        daemon: osd
        instance: ceph-osd-{{$node.Name}}
    spec:
      hostNetwork: true
      nodeSelector:
        kubernetes.io/hostname: {{$node.Name}}
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
      - name: ceph-config
        hostPath:
          path: {{$.CephConfigDirectory}}
          type: DirectoryOrCreate
      - name: ceph-data
        hostPath:
          path: {{$.CephDataDirectory}}
          type: DirectoryOrCreate
      - name: ceph-dev
        hostPath:
          path: /dev
          type: DirectoryOrCreate
      - name: k8s-tew-binary
        hostPath:
          path: {{$.K8sTewBinary}}
          type: File
      - name: k8s-tew-config
        hostPath:
          path: {{$.K8sTewConfig}}
          type: File
      containers:
      - name: ceph-osd
        image: {{$.CephImage}}
        command: ["/k8s-tew"]
        args: 
        - ceph
        - osd
        - --id
        - "{{$node.StorageIndex}}"
        securityContext:
          privileged: true
        env:
        - name: K8S_TEW_BASE_DIRECTORY
          value: "/"
        volumeMounts:
        - name: ceph-config
          mountPath: /etc/ceph
        - name: ceph-data
          mountPath: /var/lib/ceph
        - name: ceph-dev
          mountPath: /dev
        - name: k8s-tew-binary
          mountPath: /k8s-tew
        - name: k8s-tew-config
          mountPath: /etc/k8s-tew/config.yaml
{{end}}---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: storage
  name: ceph-setup
spec:
  template:
    metadata:
      name: ceph-setup
    spec:
      restartPolicy: OnFailure
      nodeSelector:
        node-role.kubernetes.io/storage: "true"
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
      - name: ceph-config
        hostPath:
          path: {{$.CephConfigDirectory}}
          type: DirectoryOrCreate
      - name: ceph-data
        hostPath:
          path: {{$.CephDataDirectory}}
          type: DirectoryOrCreate
      - name: k8s-tew-binary
        hostPath:
          path: {{$.K8sTewBinary}}
          type: File
      - name: k8s-tew-config
        hostPath:
          path: {{$.K8sTewConfig}}
          type: File
      containers:
      - name: ceph
        image: {{$.CephImage}}
        command:
        - /bin/sh
        - -c
        - "ceph mon enable-msgr2 && ceph mgr module enable dashboard && ceph dashboard create-self-signed-cert && ceph dashboard set-login-credentials $CEPH_MANAGER_USERNAME $CEPH_MANAGER_PASSWORD && ceph mgr module disable dashboard && ceph mgr module enable dashboard && ceph osd pool create {{.CephRBDPoolName}} 256 256 && ceph osd pool application enable {{.CephRBDPoolName}} rbd && ceph osd pool create {{$.CephFSPoolName}} 8 && ceph osd pool create {{$.CephFSPoolName}}_metadata 8 && ceph fs new cephfs {{$.CephFSPoolName}}_metadata {{$.CephFSPoolName}}"
        volumeMounts:
        - name: ceph-config
          mountPath: /etc/ceph
        - name: ceph-data
          mountPath: /var/lib/ceph
        - name: k8s-tew-binary
          mountPath: /k8s-tew
        - name: k8s-tew-config
          mountPath: /etc/k8s-tew/config.yaml
        env:
          - name: CEPH_MANAGER_USERNAME
            valueFrom:
              secretKeyRef:
                name: ceph-manager-credentials
                key: username
          - name: CEPH_MANAGER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ceph-manager-credentials
                key: password
---
apiVersion: v1
kind: Service
metadata:
    namespace: storage
    name: ceph-rgw
    labels:
        app: ceph
        daemon: rgw
spec:
    type: NodePort
    ports:
    - port: 7480
      protocol: TCP
      nodePort: {{.CephRadosGatewayPort}}
    selector:
      app: ceph
      daemon: rgw
---
apiVersion: v1
kind: Service
metadata:
    namespace: storage
    name: ceph-mgr
    labels:
      app: ceph
      daemon: mgr
spec:
    type: NodePort
    ports:
    - port: 8443
      protocol: TCP
      nodePort: {{.CephManagerPort}}
    selector:
      app: ceph
      daemon: mgr
